CREATE TABLE IF NOT EXISTS expirations (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP,
    date TEXT UNIQUE
);

CREATE TABLE IF NOT EXISTS underline_info (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP,
    currency TEXT,
    exchange TEXT,
    quoteType TEXT,
    symbol TEXT UNIQUE NOT NULL,
    underlyingSymbol TEXT UNIQUE,
    shortName TEXT UNIQUE,
    longName TEXT UNIQUE,
    timeZoneFullName TEXT,
    timeZoneShortName TEXT,
    financialCurrency TEXT
);

CREATE TABLE IF NOT EXISTS underline_indicators (
    id SERIAL PRIMARY KEY,
    underline_info_id INTEGER,
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    deleted_at TIMESTAMP,
    regularMarketPreviousClose INTEGER,
    regularMarketOpen INTEGER,
    regularMarketDayLow INTEGER,
    regularMarketDayHigh INTEGER,
    dividendRate INTEGER,
    beta INTEGER,
    regularMarketVolume INTEGER,
    averageVolume INTEGER,
    averageVolume10days INTEGER,
    averageDailyVolume10Day INTEGER,
    bid INTEGER,
    ask INTEGER,
    bidSize INTEGER,
    askSize INTEGER,
    marketCap BIGINT,
    fiftyTwoWeekLow INTEGER,
    fiftyTwoWeekHigh INTEGER,
    fiftyDayAverage INTEGER,
    twoHundredDayAverage INTEGER,
    sharesOutstanding BIGINT,
    sharesShort INTEGER,
    sharesShortPriorMonth INTEGER,
    sharesShortPreviousMonthDate INTEGER,
    heldPercentInsiders INTEGER,
    heldPercentInstitutions INTEGER,
    shortRatio INTEGER,
    bookValue INTEGER,
    priceToBook INTEGER,
    enterpriseToRevenue INTEGER,
    enterpriseToEbitda INTEGER,
    "52WeekChange" INTEGER,
    SandP52WeekChange INTEGER,
    lastDividendValue INTEGER,
    lastDividendDate TIMESTAMP,
    currentPrice INTEGER,
    targetHighPrice INTEGER,
    targetLowPrice INTEGER,
    targetMeanPrice INTEGER,
    targetMedianPrice INTEGER,
    recommendationMean INTEGER,
    recommendationKey TEXT,
    numberOfAnalystOpinions INTEGER,
    totalCashPerShare INTEGER,
    quickRatio INTEGER,
    currentRatio INTEGER,
    debtToEquity INTEGER,
    revenuePerShare INTEGER,
    returnOnAssets INTEGER,
    returnOnEquity INTEGER,
    trailingPegRatio INTEGER,
    FOREIGN KEY (underline_info_id) REFERENCES underline_info(id)
);

CREATE TABLE IF NOT EXISTS options (
    id SERIAL PRIMARY KEY,
    created_at TIMESTAMP,
    expiration_id INTEGER,
    underline_indicators_id INTEGER,
    underline_info_id INTEGER,
    calls TEXT,
    puts TEXT,
    FOREIGN KEY (expiration_id) REFERENCES expirations(id),
    FOREIGN KEY (underline_indicators_id) REFERENCES underline_indicators(id),
    FOREIGN KEY (underline_info_id) REFERENCES underline_info(id)
);
